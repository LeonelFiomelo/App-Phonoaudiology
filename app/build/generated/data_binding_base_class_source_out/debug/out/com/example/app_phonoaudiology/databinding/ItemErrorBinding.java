// Generated by view binder compiler. Do not edit!
package com.example.app_phonoaudiology.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app_phonoaudiology.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemErrorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TableRow trError;

  @NonNull
  public final TextView tvEstimuloOutput;

  @NonNull
  public final TextView tvPrimeraRespuestaOutput;

  @NonNull
  public final TextView tvSegundaRespuestaOutput;

  private ItemErrorBinding(@NonNull ConstraintLayout rootView, @NonNull TableRow trError,
      @NonNull TextView tvEstimuloOutput, @NonNull TextView tvPrimeraRespuestaOutput,
      @NonNull TextView tvSegundaRespuestaOutput) {
    this.rootView = rootView;
    this.trError = trError;
    this.tvEstimuloOutput = tvEstimuloOutput;
    this.tvPrimeraRespuestaOutput = tvPrimeraRespuestaOutput;
    this.tvSegundaRespuestaOutput = tvSegundaRespuestaOutput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemErrorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemErrorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_error, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemErrorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tr_error;
      TableRow trError = ViewBindings.findChildViewById(rootView, id);
      if (trError == null) {
        break missingId;
      }

      id = R.id.tv_estimuloOutput;
      TextView tvEstimuloOutput = ViewBindings.findChildViewById(rootView, id);
      if (tvEstimuloOutput == null) {
        break missingId;
      }

      id = R.id.tv_primeraRespuestaOutput;
      TextView tvPrimeraRespuestaOutput = ViewBindings.findChildViewById(rootView, id);
      if (tvPrimeraRespuestaOutput == null) {
        break missingId;
      }

      id = R.id.tv_segundaRespuestaOutput;
      TextView tvSegundaRespuestaOutput = ViewBindings.findChildViewById(rootView, id);
      if (tvSegundaRespuestaOutput == null) {
        break missingId;
      }

      return new ItemErrorBinding((ConstraintLayout) rootView, trError, tvEstimuloOutput,
          tvPrimeraRespuestaOutput, tvSegundaRespuestaOutput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
